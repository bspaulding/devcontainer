name: Docker

on:
  push:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

jobs:
  base-images:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Build base images
        run: sh build-base-images.sh docker.pkg.github.com/${{ github.repository }}/

  push:
    needs: base-images

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    strategy:
      matrix:
        base: ['alpine:latest', 'ubuntu:latest', 'clojure:openjdk-17-tools-deps-alpine', 'haskell:latest', 'node:15-alpine', 'python:3-alpine', 'rust:alpine', 'docker.pkg.github.com/bspaulding/devcontainer/bspaulding-dev-base-scala:latest']

    steps:
      - uses: actions/checkout@v2

      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_NAME=bspaulding-dev-$(echo "${{ matrix.base }}" | cut -d':' -f1)
          echo IMAGE_NAME=$IMAGE_NAME
          IMAGE_TAG=$(echo "${{ matrix.base }}" | cut -d':' -f2)
          echo IMAGE_TAG=$IMAGE_TAG

          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          docker build . --file Dockerfile --build-arg base=${{ matrix.base }} --tag $IMAGE_ID:$IMAGE_TAG
          docker push $IMAGE_ID:$IMAGE_TAG
